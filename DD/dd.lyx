#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
\usepackage{microtype}
\usepackage{eurosym}
\addtokomafont{disposition}{\rmfamily}
\usepackage[headsepline]{scrlayer-scrpage}
\clearpairofpagestyles
\ohead{DD}
\chead{\pagemark}
\ihead{\headmark}
\automark[]{section}
\renewcommand*\pagemark{{\usekomafont{pagenumber}Page\nobreakspace\thepage}}
\addtokomafont{pageheadfoot}{\upshape}
\end_preamble
\use_default_options false
\begin_modules
enumitem
\end_modules
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\bottommargin 2.5cm
\secnumdepth 4
\tocdepth 4
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily},columns=fullflexible"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Design Document
\end_layout

\begin_layout Author
Philippe Scorsolini,
\begin_inset Newline newline
\end_inset

Lorenzo Semeria,
\begin_inset Newline newline
\end_inset

Gabriele Vanoni
\end_layout

\begin_layout Subject
Politecnico di Milano, A.Y.
 2016/2017
\begin_inset Newline newline
\end_inset

M.Sc.
 Degree Programme in Computer Science and Engineering
\begin_inset Newline newline
\end_inset

Software Engineering 2 Project
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Standard
The purpose of this document is to give the detailed structure of PowerEnJoy
 software system.
\end_layout

\begin_layout Standard
So we try to give developers a clear representation of:
\end_layout

\begin_layout Itemize
The high level architecture of the system.
\end_layout

\begin_layout Itemize
The design patterns applied in order to achieve our specific necessities.
\end_layout

\begin_layout Itemize
The main components and the interfaces they provide.
\end_layout

\begin_layout Itemize
The Runtime behaviour.
\end_layout

\begin_layout Subsection
Scope
\end_layout

\begin_layout Standard
PowerEnJoy project aims to give users, operators and callcenter operators
 access to the system services they need and they are supposed to access.
\end_layout

\begin_layout Standard
The system allows: 
\end_layout

\begin_layout Itemize
Users to manage their personal data through both a web and a mobile app
 and Active Users to manage reservations only through the mobile app.
\end_layout

\begin_layout Itemize
callcenter operators to manage assistance tickets, that will be managed
 by PowerEnJoy itself.
\end_layout

\begin_layout Itemize
PowerEnjoy operators to manage the opened assistance tickets, take them
 in charge and update car's and user's data accordingly.
\end_layout

\begin_layout Standard
The system architecture shall guarantee future proof scalability and allow
 subsequent improvements and general reliability.
\end_layout

\begin_layout Subsection
Abbreviations, Definitions and Acronyms
\end_layout

\begin_layout Subsubsection
Abbreviations:
\end_layout

\begin_layout Itemize
Gn: the n-th Goal
\end_layout

\begin_layout Itemize
An: the n-th Assumption
\end_layout

\begin_layout Itemize
Rn: the n-th Requirement
\end_layout

\begin_layout Subsubsection
Acronyms
\end_layout

\begin_layout Itemize
CC: Credit Card
\end_layout

\begin_layout Itemize
DL: Driving Licence
\end_layout

\begin_layout Itemize
AU: Active User
\end_layout

\begin_layout Subsubsection
Definitions
\end_layout

\begin_layout Itemize
Visitor: person that may not be registered to the system or not logged in.
\end_layout

\begin_layout Itemize
User: a registered and logged in Visitor, that may be still waiting for
 his information to be verified.
\end_layout

\begin_layout Itemize
Active User: a User whose data (CC, DL) have been verified.
 (Shares all User's characteristics)
\end_layout

\begin_layout Itemize
Safe Zone: predefined zones where parking is allowed, parking is forbidden
 in any other zone.
\end_layout

\begin_layout Itemize
Park: park the car in the safe zone and terminate the rental.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Architectural Design
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
The system adopts a three tier architecture with a thin client represented
 by the web and mobile app, which allows the user and the operator to access
 through a GUI the different functionalities of the system according to
 the type of client used, these clients are both managed by a specific server
 side ClientHandler offering the same interface to the different server
 side services and handling appropriately the communication with the two
 clients using in both cases an asynchronous implementation of the RESTful
 API over HTTPS using the JSON format in order to achieve complete freedom
 of development specific choices on both sides.
\end_layout

\begin_layout Standard
The second tier adopts a micro service oriented architecture with shared
 database that considered the unknown charge of the system in the near future
 reduces the need of synchronization between services keeping the structure
 simple, but wouldn't be an issue to implement, in case of future necessity,
 more performing solutions such as 
\begin_inset Quotes eld
\end_inset

Database per service
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

Schema per service
\begin_inset Quotes erd
\end_inset

.
 It will also manage the communication with the cars and the power station
 around the city
\end_layout

\begin_layout Standard
The third tier provides the second tier the necessary abstraction on the
 storage technology chosen and will manage the concurrent access to the
 databases, choosing a PaaS hosting service this layer will be managed by
 the provider.
\end_layout

\begin_layout Standard
The second and third tier are designed to be deployed on the cloud in order
 to take advantage of the 
\begin_inset Quotes eld
\end_inset

scale on need
\begin_inset Quotes erd
\end_inset

 possibility it gives and for that reason has been designed as a micro service
 architecture.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename OverView.svg
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Component View of the server side deployed
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Component View
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Component Diagram.svg
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Component View of the server side single services
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As previously said the system has been designed in order to respect the
 principles of micro service architecture, so every component will be stateless,
 independently deployable, dealing with a specific aspect of our business
 domain and will hide to the other services any kind of implementation detail.
 
\end_layout

\begin_layout Standard
The communication between these micro services will use AMQP (Advanced Messaging
 Queue Protocol) and will be managed by a centralized message broker (such
 as RabbitMQ or ActiveMQ) that at the deployment of a new instance of a
 service will be automatically connected to the new service and will publish
 its existence to the other services through the 
\begin_inset Quotes eld
\end_inset

discovery service
\begin_inset Quotes erd
\end_inset

, then the 
\begin_inset Quotes eld
\end_inset

binding service
\begin_inset Quotes erd
\end_inset

 will take charge of setting up the correct queue binding rules with the
 
\begin_inset Quotes eld
\end_inset

message broker
\begin_inset Quotes erd
\end_inset

 and that will allow some advanced traffic routing features, including per-versi
on weighting and elastic load balancing on the different instances of the
 same service.
\end_layout

\begin_layout Standard
The now specified component could be in the future divided in much more
 granular services in order to decouple even more the functionalities of
 each one of them, but at this moment of the design process these are the
 main components we have defined:
\end_layout

\begin_layout Itemize
Client Handler: orchestrates the needed services for the clients
\end_layout

\begin_layout Itemize
Discovery Service: gives the other services the references that allows them
 to communicate with each other
\end_layout

\begin_layout Itemize
Binding Service: manages the queue binding for the services
\end_layout

\begin_layout Itemize
Authentication Manager: checks whether or not a certain user is allowed
 to do a certain action
\end_layout

\begin_layout Itemize
Registration Manager: manages the registration of the new users and the
 update of the registered users data if needed
\end_layout

\begin_layout Itemize
Administration Module: grants PowerEnJoys operators access to some specific
 feature needed to manage the assistance tickets they take on charge
\end_layout

\begin_layout Itemize
Model Manager: grants access to the data to the other component, abstracting
 any kind of technology specific consideration to the other services.
\end_layout

\begin_layout Itemize
Car Manager: manages the physical cars giving the other services the needed
 functionalities and informations
\end_layout

\begin_layout Itemize
Power Station Manager: manages the physical power stations data and their
 functionalities
\end_layout

\begin_layout Itemize
Assistance Ticket Manager: grants the assistance callcenter, the operators
 and the other services the APIs to manage the assistance tickets
\end_layout

\begin_layout Itemize
Reservation Manager: manages the whole reservation process for an Active
 User from the reservation intention to the effective payment
\end_layout

\begin_layout Standard
All the communications between the different component will be asynchronous
 in order to minimise useless usage of processing power that would result
 in an increase of the costs for commissioner.
\end_layout

\begin_layout Subsection
Deployment View
\end_layout

\begin_layout Standard
To reach our goals we have depicted 4 main components to be deployed separately
 from the numerous services we previously indicated in section 2.2: 
\end_layout

\begin_layout Itemize
Onboard Car Management system: grants access remotely to the needed data
 both from the car to the server and vice versa and will grant the system
 to access functionalities such as locking and unlocking the car remotely
 through OpenVPN and MQTT protocols.
\end_layout

\begin_layout Itemize
PowerStation Data System: deployed inside the single power stations will
 manage the communication with the central system granting access to it's
 data to the services that need them.
\end_layout

\begin_layout Itemize
Mobile App: will give both the operators and the Active Users, only once
 they signed in, access to the specific feature they have permission to
 access, could be implemented in many ways and will comunicate with the
 client handler server side through RESTful APIs.
 It will use an external map provider to give users a human friendly visualizati
on of cars' positions.
\end_layout

\begin_layout Itemize
Web Page: will give the Visitors access to the map with cars' positions
 and let the signed in Active Users modify their personal data
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Deployment Diagram.svg
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Deployment View of the system 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Runtime View
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Sequence Diagrams/sequenceSignUp.svg
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sign Up sequence diagram
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Sequence Diagrams/ReserveCar.svg
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Car reservation sequence diagram
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename OverView.svg
	lyxscale 10
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Component View of the server side deployed
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Component Interfaces
\end_layout

\begin_layout Subsection
Selected Architectural Styles And Patterns
\end_layout

\begin_layout Subsection
Other Design Decisions
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Algorithm Design
\end_layout

\begin_layout Standard
All algorithms needed in the project are trivial but the one dealing with
 uniform repartition of cars in the city.
 This problem has been studied a lot and there are in literature various
 algorithms that solve it.
 They are mainly based on mixed integer linear programming techniques and
 in particular [1] presented a complete model.
 In [2] is presented a greedy algorithm that achieves almost the same result.
 In [3] a more sofisticated approach is used taking into account a three
 dimensional objective function and exploiting genetic algorithms and local
 search methods.
 [4] offers a sort of classification of the stragies proposed in the past
 years.
\end_layout

\begin_layout Standard
For our purpose the approach described in [2] is the best since it minimizes
 the number of the operators needed to relocate cars and so the costs.
\end_layout

\begin_layout Subsection*
Riferimenti
\end_layout

\begin_layout Standard
[1] A.
 G.
 Kek, R.
 L.
 Cheu, Q.
 Meng, and C.
 H.
 Fung, “A decision support system for vehicle relocation operations in carsharin
g systems
\begin_inset Quotes erd
\end_inset

, Transportation Research Part E: Logistics and Transportation Review, vol.
 45, no.
 1, pp.
 149–158, 2009.
\end_layout

\begin_layout Standard
[2] R.
 Zakaria, L.
 Moalic, A.
 Caminada, M.
 Dib, 
\begin_inset Quotes eld
\end_inset

A Greedy Algorithm for relocation problem in one-way carsharing
\begin_inset Quotes erd
\end_inset

, 10th International Conference on Modeling, Optimization and Simulation
 - MOSIM’14 – November 5-7-2014- Nancy – France “Toward circular Economy”.
\end_layout

\begin_layout Standard
[3] Moalic, L., Lamrous, S., & Caminada, A.
 (2013).
 A Multiobjective Memetic Algorithm for Solving the Carsharing Problem.
 Proceedings Of The 2013 International Conference On Artificial IntelligenceIcai
 2013, Vol.
 1, pp.
 877-883.
\end_layout

\begin_layout Standard
[4] S.
 Weikl, K.
 Bogenberger, 
\begin_inset Quotes eld
\end_inset

Relocation Strategies and Algorithms for free-floating Car Sharing Systems
\begin_inset Quotes erd
\end_inset

, 15th International IEEE Conference on Intelligent Transportation Systems
 Anchorage, Alaska, USA, September 16-19, 2012.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
User Interface Design
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Requirements traceability
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Effort spent
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Component
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Time spent (in hour)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Philippe Scorsolini
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lorenzo Semeria
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
18
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Gabriele Vanoni
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24.5
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\end_layout

\end_body
\end_document
